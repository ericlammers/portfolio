{"version":3,"sources":["Color-Image.jpg","components/Page/components/TogglableInfoBar/components/InfoButton/InfoButton.jsx","components/Page/components/TogglableInfoBar/components/ClosableInfoBar/ClosableInfoBar.jsx","components/Page/components/TogglableInfoBar/TogglableInfoBar.jsx","components/Page/components/InfoBar/InfoBar.jsx","components/Page/components/MainContent/MainContent.jsx","services/strings.js","components/Page/Page.jsx","services/throttleAndDebounce.js","scenes/Home/components/Content/Content.jsx","scenes/Home/components/Timeline/components/TimelineItem/components/Circle/Circle.jsx","scenes/Home/components/Timeline/components/TimelineItem/components/TimelineBar/TimelineBar.jsx","scenes/Home/components/Timeline/components/TimelineItem/TimelineItem.jsx","scenes/Home/components/Timeline/components/JobDescription/JobDescription.jsx","scenes/Home/components/Timeline/JobTimeline.jsx","scenes/Home/components/Skills/components/Skill/components/Filler/Filler.jsx","scenes/Home/components/Skills/components/Skill/components/ProgressBar/ProgressBar.jsx","scenes/Home/components/Skills/components/Skill/Skill.jsx","scenes/Home/components/Skills/Skills.jsx","scenes/Home/components/ProjectCards/components/ProjectCard/ProjectCard.jsx","scenes/Home/components/ProjectCards/ProjectCards.jsx","scenes/Home/components/IntroImage/IntroImage.jsx","scenes/Home/HomePage.jsx","Layout.jsx","serviceWorker.js","polyfills.js","index.js"],"names":["module","exports","__webpack_require__","p","InfoButton","_ref","openInfoBar","react_default","a","createElement","className","onClick","aria-hidden","CloseableInfoBar","closeInfoBar","children","useEffect","window","addEventListener","removeEventListener","React","Children","map","child","i","cloneElement","TogglableInfoBar","_useState","useState","_useState2","Object","slicedToArray","opened","setOpened","component","ClosableInfoBar_ClosableInfoBar","components_InfoButton_InfoButton","minToDisplay","InfoBar","sectionNames","currentSection","scrollToSection","sections","sectionName","sectionClicked","key","style","fontWeight","borderBottom","concat","MainContent","createId","string","replace","toLowerCase","Page","content","setCurrentSection","sectionIdsToNamesMap","forEach","objectSpread","defineProperty","determineCurrentSection","sectionIds","candidateCurrentSection","length","sectionId","top","document","getElementById","getBoundingClientRect","innerHeight","isAlreadyCurrentSection","throttledDetermineCurrentSection","func","limit","inThrottle","inDebounce","args","arguments","context","this","apply","setTimeout","clearTimeout","throttleAndDebounce","scrollIntoView","behavior","components_TogglableInfoBar_TogglableInfoBar","components_InfoBar_InfoBar","components_MainContent_MainContent","Section","name","id","Content","_ref2","sectionInfoList","sectionInfo","Content_Section","title","Circle","color","backgroundColor","TimelineBar","components_Circle_Circle","TimelineItem","components_TimelineBar_TimelineBar","JobDescription","employer","dateRange","description","JobTimeline","Jobs","job","timelineJob","components_TimelineItem_TimelineItem","components_JobDescription_JobDescription","class","Filler","percentage","width","ProgressBar","textLocation","fillerPercentage","marginLeft","components_Filler_Filler","Skill","components_ProgressBar_ProgressBar","Skills","skills","skill","components_Skill_Skill","ProjectCard","iconName","borderColor","ProjectCards","components_ProjectCard_ProjectCard","IntroImage","src","require","alt","HomePage","components_ProjectCards_ProjectCards","components_Skills_Skills","Timeline_JobTimeline","components_IntroImage_IntroImage","components_Content_Content","components_Page_Page","Layout","Home_HomePage","Boolean","location","hostname","match","smoothscroll","polyfill","ReactDOM","render","src_Layout","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bd6fc01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Color-Image.64a8ee70.jpg\";","import React from 'react';\nimport './InfoButton.scss'\n\nconst InfoButton = ({openInfoBar}) => (\n    <div className=\"info-button\" onClick={openInfoBar}>\n        <i className=\"fa fa-bars\" aria-hidden=\"true\" />\n    </div>\n);\n\nexport default InfoButton;","import React, {useEffect} from 'react';\nimport './ClosableInfoBar.scss'\n\nconst CloseableInfoBar = ({closeInfoBar, children}) =>  {\n    useEffect(() => {\n        window.addEventListener('scroll', closeInfoBar);\n\n        return () => {\n            window.removeEventListener('scroll', closeInfoBar);\n        };\n    });\n\n\n\n    return (\n        <div className=\"closable-info-bar\">\n            <span className=\"close-button\" onClick={closeInfoBar}>\n                <i className=\"fa fa-times\" />\n            </span>\n            {React.Children.map(children, (child, i) => {\n                return React.cloneElement(child, {closeInfoBar: closeInfoBar})\n            })}\n        </div>\n    );\n};\n\n\nexport default CloseableInfoBar;","import React, { useState } from 'react';\nimport InfoButton from \"./components/InfoButton/InfoButton\";\nimport ClosableInfoBar from \"./components/ClosableInfoBar/ClosableInfoBar\";\nimport './TogglableInfoBar.scss'\n\nconst TogglableInfoBar = ({children}) => {\n    const [opened, setOpened] = useState(false);\n\n    const openInfoBar = () => {\n        setOpened(true);\n    };\n\n    const closeInfoBar = () => {\n        setOpened(false);\n    };\n\n    const component = opened ?\n        <ClosableInfoBar closeInfoBar={closeInfoBar}>{children}</ClosableInfoBar> :\n        <InfoButton openInfoBar={openInfoBar}/>;\n\n    return (\n        <div className=\"togglable-info-bar\">\n            {component}\n        </div>\n    );\n};\n\nexport default TogglableInfoBar;","import React from 'react';\nimport './InfoBar.scss'\n\nexport const minToDisplay = {\n    medium: 'medium-and-larger',\n};\n\nconst InfoBar = (\n    { minToDisplay, sectionNames, currentSection, scrollToSection, closeInfoBar }\n) =>  {\n    const sections = sectionNames.map(sectionName => {\n        const sectionClicked = () => {\n            scrollToSection(sectionName);\n            if (closeInfoBar) {\n                closeInfoBar();\n            }\n        };\n\n        if (sectionName === currentSection) {\n            return (\n                <button\n                    key={sectionName}\n                    onClick={sectionClicked}\n                    style={{fontWeight: \"bold\", borderBottom: \"2px solid\"}}>\n                    {sectionName}\n                </button>\n            )\n        }\n        return (\n            <button onClick={sectionClicked} key={sectionName}>{sectionName}</button>\n        )\n    });\n\n    return (\n        <div className={`info-bar ${minToDisplay ? minToDisplay : ''}`}>\n            {sections}\n        </div>\n    );\n};\n\n\nexport default InfoBar;","import React from 'react';\nimport './MainContent.scss'\n\nconst MainContent = ({children}) => (\n    <div className=\"main-content\">\n        {children}\n    </div>\n);\n\nexport default MainContent;","export const createId = (string) => string.replace(/\\s+/g, '-').toLowerCase();","import React, { useState, useEffect } from 'react';\nimport ToggleableInfoBar from './components/TogglableInfoBar/TogglableInfoBar';\nimport InfoBar, { minToDisplay } from \"./components/InfoBar/InfoBar\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport {createId} from \"../../services/strings\";\nimport throttleAndDebounce from \"../../services/throttleAndDebounce\";\nimport './Page.scss';\n\nconst Page = ({content, sectionNames}) => {\n    const [currentSection, setCurrentSection] = useState(sectionNames[0]);\n\n    let sectionIdsToNamesMap = {};\n    sectionNames.forEach((sectionName) => {\n        sectionIdsToNamesMap = {...sectionIdsToNamesMap, [createId(sectionName)]: sectionName };\n    });\n\n\n    const isAlreadyCurrentSection = sectionId => sectionId === createId(currentSection);\n\n    const isHighInThePage = (yLocation) => {\n        const windowHeight = window.innerHeight;\n        return yLocation < (2 * windowHeight)/5;\n    };\n\n    const determineCurrentSection = () => {\n        const sectionIds = sectionNames.map(sectionName => createId(sectionName));\n        let candidateCurrentSection = sectionIds[0];\n\n        for(let i = 1; i < sectionIds.length; i++) {\n            const sectionId = sectionIds[i];\n            const top = document.getElementById(sectionId).getBoundingClientRect().top;\n            if(isHighInThePage(top)) {\n                candidateCurrentSection = sectionId;\n            }\n        }\n\n        if(!isAlreadyCurrentSection(candidateCurrentSection)) {\n            setCurrentSection(sectionIdsToNamesMap[candidateCurrentSection]);\n        }\n    };\n\n    const throttledDetermineCurrentSection = throttleAndDebounce(() => {\n        determineCurrentSection();\n    }, 100);\n\n    const scrollToSection = (sectionName) => {\n        document.getElementById(createId(sectionName)).scrollIntoView({\n            behavior: 'smooth'\n        });\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', throttledDetermineCurrentSection);\n\n        return function cleanup() {\n            window.removeEventListener('scroll', throttledDetermineCurrentSection);\n        };\n    });\n\n    return (\n         <div className=\"page\">\n            <ToggleableInfoBar>\n                <InfoBar\n                    sectionNames={sectionNames}\n                    currentSection={currentSection}\n                    scrollToSection={scrollToSection}\n                />\n            </ToggleableInfoBar>\n            <InfoBar\n                sectionNames={sectionNames}\n                currentSection={currentSection}\n                scrollToSection={scrollToSection}\n                minToDisplay={minToDisplay.medium}\n            />\n            <MainContent>\n                {content}\n            </MainContent>\n        </div>\n    );\n};\n\nexport default Page;","export default (func, limit) => {\n    let inThrottle;\n    let inDebounce;\n\n    return function() {\n        const args = arguments;\n        const context = this;\n\n        if (!inThrottle) {\n            func.apply(context, args);\n            inThrottle = true;\n            setTimeout(() => inThrottle = false, limit)\n        }\n\n        clearTimeout(inDebounce);\n        inDebounce = setTimeout(() => func.apply(context, args), limit)\n    }\n}","import React from 'react';\nimport \"./Content.scss\";\nimport {createId} from \"../../../../services/strings\";\n\nconst Section = ({name, id, children}) => (\n    <div id={id} className=\"section\">\n        <h2>{name}</h2>\n        {children}\n    </div>\n);\n\nconst Content = ({sectionInfoList}) => (\n    <div className=\"content\">\n        {sectionInfoList.map(sectionInfo => (\n            <Section key={sectionInfo.title} name={sectionInfo.title} id={createId(sectionInfo.title)}>\n                {sectionInfo.component}\n            </Section>\n        ))}\n    </div>\n);\n\nexport default Content;","import React from 'react';\nimport './Circle.scss'\n\nconst Circle = ({color}) => (\n    <div\n        className=\"circle\"\n        style={{backgroundColor: color}}\n    >\n    </div>\n);\n\nexport default Circle;","import React from 'react';\nimport Circle from \"../Circle/Circle\";\nimport './TimelineBar.scss';\n\nconst TimelineBar = ({color}) => (\n    <div className=\"timeline-bar\">\n        <div className=\"bar\"/>\n        <div className=\"circle-container\">\n            <Circle color={color}/>\n        </div>\n    </div>\n);\n\nexport default TimelineBar;","import React from 'react';\nimport TimelineBar from \"./components/TimelineBar/TimelineBar\";\nimport './TimelineItem.scss';\n\nconst TimelineItem = ({color, children}) => (\n    <div className=\"timeline-item\">\n        <TimelineBar color={color} />\n        <div className=\"content\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default TimelineItem;","import React from 'react';\nimport './JobDescription.scss';\n\n// TODO Style for different screen sizes\nconst JobDescription = ({title, employer, dateRange, description}) => (\n    <div className=\"job-description\">\n        <div className=\"header\">\n            <div className=\"title\">{title}</div>\n            <div className=\"sub-title date-range\">{dateRange}</div>\n            <div className=\"sub-title employer\">{employer}</div>\n        </div>\n        {description}\n    </div>\n);\n\nexport default JobDescription;","import React from 'react';\nimport TimelineItem from \"./components/TimelineItem/TimelineItem\";\nimport JobDescription from \"./components/JobDescription/JobDescription\";\n\nconst red = \"#ec5453\";\nconst purple = \"#a84cb8\";\nconst yellow = \"#f9bf3f\";\nconst blue = \"#2c98f0\";\nconst green = \"#1DA598\";\nconst orange = \"#FF8C00\";\n\nconst JobTimeline = () => {\n    // TODO Job Descriptions should include full or part time work\n    const timelineJobs = [\n        {\n            color: orange,\n            job: {\n                title: 'Software Developer',\n                employer: 'Autodata Solutions',\n                dateRange: 'May 2019 - Present',\n                description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras vulputate, purus non finibus euismod, libero mi vehicula quam, consectetur finibus nisi enim ut nisl. Nullam maximus blandit finibus. In in lacinia ipsum, vel rutrum neque. Pellentesque dolor tortor, vulputate in suscipit ac, aliquet vel sapien.',\n            }\n        },\n        {\n            color: blue,\n            job: {\n                title: 'Web Developer Intern',\n                employer: 'Autodata Solutions',\n                dateRange: 'May 2017 - August 2018',\n                description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras vulputate, purus non finibus euismod, libero mi vehicula quam, consectetur finibus nisi enim ut nisl. Nullam maximus blandit finibus. In in lacinia ipsum, vel rutrum neque. Pellentesque dolor tortor, vulputate in suscipit ac, aliquet vel sapien.',\n            }\n        },\n        {\n            color: red,\n            job: {\n                title: 'Fullstack Developer',\n                employer: 'Western University',\n                dateRange: 'September 2016 - April 2017',\n                description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras vulputate, purus non finibus euismod, libero mi vehicula quam, consectetur finibus nisi enim ut nisl. Nullam maximus blandit finibus. In in lacinia ipsum, vel rutrum neque. Pellentesque dolor tortor, vulputate in suscipit ac, aliquet vel sapien.',\n            }\n        },\n    ];\n\n    const Jobs = timelineJobs.map(timelineJob => (\n        <TimelineItem color={timelineJob.color}>\n            <JobDescription { ...timelineJob.job } />\n        </TimelineItem>\n    ));\n\n    return (\n        <div class=\"job-timeline\">\n            { Jobs }\n        </div>\n    )\n};\n\nexport default JobTimeline;","import React from 'react';\n\nconst Filler = ({percentage, color}) => (\n    <div className=\"filler\" style={{ width: percentage, backgroundColor: color}} />\n);\n\nexport default Filler;","import React from 'react';\nimport './ProgressBar.scss';\nimport Filler from \"../Filler/Filler\";\n\nconst ProgressBar = ({percentage, color}) => {\n    const textLocation = percentage < 90 ? `${percentage + 2}%` : '92%';\n    const fillerPercentage = `${percentage}%`;\n\n    return (\n        <div className=\"progress-bar\">\n            <div className=\"text\">\n          <span style={{marginLeft: textLocation, color: color}}>\n            {fillerPercentage}\n          </span>\n            </div>\n            <div className=\"display\">\n                <Filler percentage={fillerPercentage} color={color} />\n            </div>\n        </div>\n    );\n};\n\nexport default ProgressBar;","import React from 'react';\nimport ProgressBar from \"./components/ProgressBar/ProgressBar\";\nimport './Skill.scss'\n\nconst Skill = ({name, percentage, color}) => (\n    <div className=\"skill\">\n        <div className=\"name\">\n            {name}\n        </div>\n        <ProgressBar percentage={percentage} color={color} />\n    </div>\n);\n\nexport default Skill;","import React from 'react';\nimport Skill from \"./components/Skill/Skill\";\nimport './Skills.scss';\n\nconst red = \"#ec5453\";\nconst purple = \"#a84cb8\";\nconst yellow = \"#f9bf3f\";\nconst blue = \"#2c98f0\";\nconst green = \"#1DA598\";\nconst orange = \"\t#FF8C00\";\n\nconst Skills = () => {\n    const skills = [\n        {\n            color: red,\n            name: 'React',\n            percentage: 90,\n        },\n        {\n            color: purple,\n            name: 'JavaScript/HTML/CSS',\n            percentage: 80,\n        },\n        {\n            color: yellow,\n            name: 'Spring/Spring Boot',\n            percentage: 80,\n        },\n        {\n            color: blue,\n            name: 'Java',\n            percentage: 80,\n        },\n        {\n            color: green,\n            name: 'MySql/SQL',\n            percentage: 70,\n        },\n        {\n            color: orange,\n            name: 'Mongo',\n            percentage: 60,\n        },\n    ];\n\n    return (\n        <div className=\"skill-list\">\n            {skills.map(skill => <Skill { ...skill } />)}\n        </div>\n    )\n};\n\nexport default Skills;","import React from 'react';\nimport './ProjectCard.scss';\n\nconst ProjectCard = ({name, iconName, color}) => {\n    const style = {\n        color: color,\n        borderColor: color\n    };\n\n    return (\n        <div className=\"project-card\" style={style}>\n            <div className=\"icon\">\n                <i className={iconName} />\n            </div>\n            <div className=\"card-title\">\n                {name}\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectCard;","import React from 'react';\nimport './ProjectCards.scss';\nimport ProjectCard from \"./components/ProjectCard/ProjectCard\";\n\nconst red = \"#ec5453\";\nconst purple = \"#a84cb8\";\nconst yellow = \"#f9bf3f\";\nconst blue = \"#2c98f0\";\n\nconst ProjectCards = () => (\n    <div className=\"project-cards\">\n        <ProjectCard name=\"Front End Development\" iconName=\"fa fa-code\" color={blue} />\n        <ProjectCard name=\"Back End Development\" iconName=\"fa fa-database\" color={yellow} />\n        <ProjectCard name=\"DevOps\" iconName=\"fa fa-cloud-upload\" color={purple} />\n        <ProjectCard name=\"Staying Current\" iconName=\"fa fa-book\" color={red} />\n    </div>\n);\n\nexport default ProjectCards;","import React from 'react';\nimport './IntroImage.scss';\n\nconst IntroImage = () => (\n    <div className=\"intro-image\">\n        <div className=\"our-picture\">\n            <img src={require(\"../../../../Color-Image.jpg\")} alt=\"\"/>\n        </div>\n        <span className=\"text\"> Fullstack developer. <br />React enthusiast.</span>\n    </div>\n);\n\nexport default IntroImage;","import React from 'react';\nimport Page from \"../../components/Page/Page\";\nimport Content from \"./components/Content/Content\";\nimport JobTimeline from \"./components/Timeline/JobTimeline\";\nimport Skills from \"./components/Skills/Skills\";\nimport ProjectCards from \"./components/ProjectCards/ProjectCards\";\nimport IntroImage from \"./components/IntroImage/IntroImage\";\n\nconst HomePage = () => {\n    const sectionInfoList = [\n        {\n            title: 'About',\n            component: <ProjectCards />,\n        },\n        {\n            title: 'Skills',\n            component: <Skills/>,\n        },\n        {\n            title: 'Work Experience',\n            component:  <JobTimeline />,\n        },\n        {\n            title: 'Education',\n            component: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras vulputate, purus ' +\n            'non finibus euismod, libero mi vehicula quam, consectetur finibus nisi enim ut nisl. Nullam ' +\n            'maximus blandit finibus. In in lacinia ipsum, vel rutrum neque. Pellentesque dolor tortor, ' +\n            'vulputate in suscipit ac, aliquet vel sapien.Lorem ipsum dolor sit amet, consectetur adipiscing elit. ' +\n            'Cras vulputate, purus non finibus euismod, libero mi vehicula quam, consectetur finibus nisi enim ut' +\n            ' nisl. Nullam maximus blandit finibus. In in lacinia ipsum, vel rutrum neque. Pellentesque dolor ' +\n            'tortor, vulputate in suscipit ac, aliquet vel sapien.',\n        },\n        {\n            title: 'Contact',\n            component: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras vulputate, purus ' +\n            'non finibus euismod, libero mi vehicula quam, consectetur finibus nisi enim ut nisl. Nullam ' +\n            'maximus blandit finibus. In in lacinia ipsum, vel rutrum neque. Pellentesque dolor tortor, ' +\n            'vulputate in suscipit ac, aliquet vel sapien.Lorem ipsum dolor sit amet, consectetur adipiscing elit. ' +\n            'Cras vulputate, purus non finibus euismod, libero mi vehicula quam, consectetur finibus nisi enim ut' +\n            ' nisl. Nullam maximus blandit finibus. In in lacinia ipsum, vel rutrum neque. Pellentesque dolor ' +\n            'tortor, vulputate in suscipit ac, aliquet vel sapien.',\n        },\n    ];\n    const content = (\n        <div>\n            <IntroImage />\n            <Content sectionInfoList={sectionInfoList}/>\n        </div>\n    );\n\n    return (\n        <div>\n            <Page content={content} sectionNames={sectionInfoList.map(sectionInfo => sectionInfo.title)}/>\n        </div>\n    );\n};\n\nexport default HomePage;","import React from 'react';\nimport HomePage from \"./scenes/Home/HomePage\";\nimport 'typeface-quicksand';\nimport './Layout.scss';\nimport './variables.scss'\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default Layout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Layout is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import smoothscroll from 'smoothscroll-polyfill';\n\nsmoothscroll.polyfill();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './Layout';\nimport * as serviceWorker from './serviceWorker';\nimport './polyfills';\nimport './index.css';\n\nReactDOM.render(<Layout />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}